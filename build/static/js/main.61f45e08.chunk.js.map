{"version":3,"sources":["assets/mylogo2.png","store.js","Components/CustomHeader/CustomNav/CustomNav.js","Components/CustomHeader/Logo/Logo.js","Components/CustomHeader/CustomHeader.js","Components/TodoApp/InputTextBox.js","Components/TodoApp/TaskItem.js","Components/TodoApp/TaskList.js","containers/TodoApp/TodoApp.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","NEW_TODO_CHANGED","ADD_TODO","TOGGLE_TODO_DONE","REMOVE_TODO","ALL_DONE","STATUS_ALL_DONE","VIEW_STATUS","initialState","activePage","newTodo","allDone","view","todos","title","done","actions","newTodoChanged","type","addTodo","todo","toggleTodoDone","toggle","removeTodo","index","statusAllDone","viewStatus","viewInput","CustomNav","props","react_default","a","createElement","className","onClick","document","querySelector","style","height","console","log","classList","add","remove","id","href","Logo","width","src","logo","alt","CustomHeader","CustomHeader_Logo_Logo","CustomHeader_CustomNav_CustomNav","InputTextBox","onSubmit","formSubmitted","htmlFor","name","onChange","event","newTodoChange","target","value","placeholder","TaskItem","key","checked","TaskList","checkAll","map","TodoApp_TaskItem","TodoApp","preventDefault","this","onAddTodo","onNewTodoChanged","onStatusAllDone","onToggleTodoDone","_this","TodoApp_InputTextBox","TodoApp_TaskList","onViewStatus","bind","onRemoveTodo","onAllDone","Component","connect","state","dispatch","App","Components_CustomHeader_CustomHeader","containers_TodoApp_TodoApp","Boolean","window","location","hostname","match","store","createStore","arguments","length","undefined","action","Object","objectSpread","concat","toConsumableArray","splice","status","count","compose","applyMiddleware","logger","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,oRCAlCC,EAAmB,mBACnBC,EAAW,WACXC,EAAmB,mBACnBC,EAAc,eACdC,EAAW,WACXC,EAAkB,kBAClBC,EAAc,cAEdC,EAAe,CACnBC,WAAY,YACZC,QAAS,GACTC,QAAS,EACTC,KAAM,WACNC,MAAO,CACL,CAAEC,MAAO,cAAeC,MAAM,GAC9B,CAAED,MAAO,eAAgBC,MAAM,KAItBC,EAAU,CACrBC,eADqB,SACNP,GACb,MAAO,CACLQ,KAAMjB,EACNS,YAGJS,QAPqB,SAObC,GACN,MAAO,CACLF,KAAMhB,EAENkB,SAGJC,eAdqB,SAcNC,GACb,MAAO,CACLJ,KAAMf,EACNmB,WAGJC,WApBqB,SAoBVC,GACT,MAAO,CACLN,KAAMd,EACNoB,UAGJb,QA1BqB,WA2BnB,MAAO,CACLO,KAAMb,IAGVoB,cA/BqB,WAgCnB,MAAO,CACLP,KAAMZ,IAGVoB,WApCqB,SAoCVC,GACT,MAAO,CACLT,KAAMX,EACNoB,qFCjBSC,MAtCf,SAAmBC,GAajB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,QAfN,WACpB,IAAIZ,EAASa,SAASC,cAAc,OAAOC,MAAMC,OACjDC,QAAQC,IAAIlB,GACG,QAAXA,GAA+B,KAAXA,GACtBa,SAASC,cAAc,OAAOC,MAAMC,OAAS,QAC7CH,SAASC,cAAc,SAASK,UAAUC,IAAI,UAG9CP,SAASC,cAAc,OAAOC,MAAMC,OAAS,MAC7CH,SAASC,cAAc,SAASK,UAAUE,OAAO,WAO7Cb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAEjBH,EAAAC,EAAAC,cAAA,MAAIY,GAAG,YACLd,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UACZH,EAAAC,EAAAC,cAAA,KAAGa,KAAK,SAAR,SAEFf,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGa,KAAK,SAAR,SAEFf,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGa,KAAK,YAAR,YAEFf,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGa,KAAK,UAAR,uCCnBGC,EAVF,WACX,OACEhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,KAAGa,KAAK,SACNf,EAAAC,EAAAC,cAAA,OAAKe,MAAM,OAAOT,OAAO,OAAOU,IAAKC,IAAMC,IAAI,UCMxCC,SATM,WACnB,OACErB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAACoB,EAAD,MACAtB,EAAAC,EAAAC,cAACqB,EAAD,SCaSC,QAnBM,SAAAzB,GACnB,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMuB,SAAU1B,EAAM2B,eACpB1B,EAAAC,EAAAC,cAAA,SAAOd,KAAK,WAAW0B,GAAG,WAC1Bd,EAAAC,EAAAC,cAAA,SAAOyB,QAAQ,SAASxB,UAAU,QAClCH,EAAAC,EAAAC,cAAA,SACEd,KAAK,OACLwC,KAAK,UACLC,SAAU,SAAAC,GAAK,OAAI/B,EAAMgC,cAAcD,EAAME,OAAOC,QACpDA,MAAOlC,EAAMnB,QACbsD,YAAY,qBACZ/B,UAAU,kBC0BLgC,EAtCE,SAAApC,GACf,OACEC,EAAAC,EAAAC,cAAA,OACEC,UACiB,WAAfJ,EAAMjB,OAAyC,IAApBiB,EAAMT,KAAKL,KAClC,iBACe,SAAfc,EAAMjB,OAAuC,IAApBiB,EAAMT,KAAKL,KACpC,iBACe,aAAfc,EAAMjB,KACN,iBACA,iBAENsD,IAAKrC,EAAML,OAEXM,EAAAC,EAAAC,cAAA,SAAOC,UAAU,QACfH,EAAAC,EAAAC,cAAA,SACEd,KAAK,WACL0B,GAAG,YACHe,SAAU,SAAAC,GAAK,OAAI/B,EAAMR,eAAeuC,EAAO/B,EAAML,QACrD2C,QAAStC,EAAMT,KAAKL,OAEtBe,EAAAC,EAAAC,cAAA,QAAMC,UAAWJ,EAAMT,KAAKL,KAAO,YAAc,IAC9Cc,EAAMT,KAAKN,OAGdgB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAElBH,EAAAC,EAAAC,cAAA,QACEC,UAAU,cACVnB,MAAM,SACNoB,QAAS,kBAAML,EAAMN,WAAWM,EAAML,SAHxC,YCqCS4C,EA/DE,SAAAvC,GACf,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,QACfH,EAAAC,EAAAC,cAAA,SACEd,KAAK,WACL0B,GAAG,YAEHe,SAAU,kBAAM9B,EAAMwC,YACtBF,UAAStC,EAAMlB,UAEjBmB,EAAAC,EAAAC,cAAA,QAAMC,UAAWJ,EAAMlB,QAAU,YAAc,IAC5CkB,EAAMlB,QAAU,cAAgB,YAGnCmB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBAKxBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACZJ,EAAMhB,MAAMyD,IAAI,SAAClD,EAAMI,GACtB,OACEM,EAAAC,EAAAC,cAACuC,EAAD,CACE3D,KAAMiB,EAAMjB,KACZS,eAAgBQ,EAAMR,eACtBE,WAAYM,EAAMN,WAClBH,KAAMA,EACNI,MAAOA,EACP0C,IAAK1C,OAKbM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MACEC,UAA0B,aAAfJ,EAAMjB,KAAsB,SAAW,GAClDsB,QAAS,kBAAML,EAAMH,WAAW,cAFlC,YAMAI,EAAAC,EAAAC,cAAA,MACEC,UAA0B,WAAfJ,EAAMjB,KAAoB,SAAW,GAChDsB,QAAS,kBAAML,EAAMH,WAAW,YAFlC,UAMAI,EAAAC,EAAAC,cAAA,MACEC,UAA0B,SAAfJ,EAAMjB,KAAkB,SAAW,GAC9CsB,QAAS,kBAAML,EAAMH,WAAW,UAFlC,YChDJ8C,wLAEUZ,GACZA,EAAMa,iBACNC,KAAK7C,MAAM8C,UAAU,CACnB7D,MAAO4D,KAAK7C,MAAMnB,QAClBK,MAAM,IAER2D,KAAK7C,MAAM+C,iBAAiB,IAC5BF,KAAK7C,MAAMgD,yDAIEjB,EAAOpC,GACpBkD,KAAK7C,MAAMiD,iBAAiB,CAC1BtD,QACA2C,QAASP,EAAME,OAAOK,UAExBO,KAAK7C,MAAMgD,mDAGJ,IAAAE,EAAAL,KACP,OACE5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,YAAO0C,KAAK7C,MAAMpB,YAElBqB,EAAAC,EAAAC,cAACgD,EAAD,CACEtE,QAASgE,KAAK7C,MAAMnB,QACpB8C,cAAe,SAAAI,GAAK,OAAImB,EAAKvB,cAAcI,IAC3CC,cAAea,KAAK7C,MAAM+C,oBAG9B9C,EAAAC,EAAAC,cAACiD,EAAD,CACErE,KAAM8D,KAAK7C,MAAMjB,KACjBc,WAAYgD,KAAK7C,MAAMqD,aACvBvE,QAAS+D,KAAK7C,MAAMlB,QACpBU,eAAgBqD,KAAKrD,eAAe8D,KAAKT,MACzCnD,WAAYmD,KAAK7C,MAAMuD,aACvBvE,MAAO6D,KAAK7C,MAAMhB,MAClBwD,SAAUK,KAAK7C,MAAMwD,qBAzCXC,aAsFPC,kBArCf,SAAyBC,GACvB,MAAO,CACL/E,WAAY+E,EAAM/E,WAClBC,QAAS8E,EAAM9E,QACfC,QAAS6E,EAAM7E,QACfE,MAAO2E,EAAM3E,MACbD,KAAM4E,EAAM5E,OAIhB,SAA4B6E,GAC1B,MAAO,CACLb,iBADK,SACYlE,GACf+E,EAASzE,EAAQC,eAAeP,KAElCiE,UAJK,SAIKvD,GACRqE,EAASzE,EAAQG,QAAQC,KAE3B0D,iBAPK,SAOYxD,GACfmE,EAASzE,EAAQK,eAAeC,KAElC8D,aAVK,SAUQ5D,GACXiE,EAASzE,EAAQO,WAAWC,KAE9B6D,UAbK,WAcHI,EAASzE,EAAQL,YAEnBkE,gBAhBK,WAiBHY,EAASzE,EAAQS,kBAEnByD,aAnBK,SAmBQvD,GACXY,QAAQC,IAAIb,GACZ8D,EAASzE,EAAQU,WAAWC,OAKnB4D,CAGbf,GC/EakB,0LATX,OACE5D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC2D,EAAD,MACA7D,EAAAC,EAAAC,cAAC4D,EAAD,cALUN,cCMEO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCRN,IAAMC,EAAQC,YVqDP,WAA+C,IAA9BX,EAA8BY,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtB5F,EAAc+F,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpD,OAAQC,EAAOrF,MACb,KAAKjB,EACH,OAAOuG,OAAAC,EAAA,EAAAD,CAAA,GACFhB,EADL,CAEE9E,QAAS6F,EAAO7F,UAGpB,KAAKR,EACH,OAAOsG,OAAAC,EAAA,EAAAD,CAAA,GACFhB,EADL,CAEE3E,MAAK,GAAA6F,OAAAF,OAAAG,EAAA,EAAAH,CAAMhB,EAAM3E,OAAZ,CAAmB0F,EAAOnF,SAGnC,KAAKjB,EACH,IAAMU,EAAK2F,OAAAG,EAAA,EAAAH,CAAOhB,EAAM3E,OAGxB,OADAA,EAAM0F,EAAOjF,OAAOE,OAAOT,KAAOwF,EAAOjF,OAAO6C,QACzCqC,OAAAC,EAAA,EAAAD,CAAA,GACFhB,EADL,CAEE3E,UAGJ,KAAKT,EACH,IAAMS,EAAK2F,OAAAG,EAAA,EAAAH,CAAOhB,EAAM3E,OAExB,OADAA,EAAM+F,OAAOL,EAAO/E,MAAO,GACpBgF,OAAAC,EAAA,EAAAD,CAAA,GACFhB,EADL,CAEE3E,UAGJ,KAAKR,EACH,IAAIwG,GAAS,EACTrB,EAAM7E,UACRkG,GAAS,GAEX,IAAMhG,EAAQ2E,EAAM3E,MAAMyD,IAAI,SAAAlD,GAC5B,OAAOoF,OAAAC,EAAA,EAAAD,CAAA,GACFpF,EADL,CAEEL,KAAM8F,MAIV,OAAOL,OAAAC,EAAA,EAAAD,CAAA,GACFhB,EADL,CAEE7E,QAASkG,EACThG,UAGJ,KAAKP,EACH,IAAIwG,EAAQ,EAQZ,OAPAtB,EAAM3E,MAAMyD,IAAI,SAAAlD,GAId,OAHIA,EAAKL,MACP+F,IAEKA,IAETvE,QAAQC,IAAIsE,GACLN,OAAAC,EAAA,EAAAD,CAAA,GACFhB,EADL,CAEE7E,QAASmG,IAAUtB,EAAM3E,MAAMwF,SAGnC,KAAK9F,EACH,OAAOiG,OAAAC,EAAA,EAAAD,CAAA,GACFhB,EADL,CAEE5E,KAAM2F,EAAO5E,YAGjB,QACE,OAAO6D,IUzHXuB,YACEC,YAAgBC,UAChBnB,OAAOoB,8BAAgCpB,OAAOoB,iCAIlDC,IAASC,OACPtF,EAAAC,EAAAC,cAACqF,EAAA,EAAD,CAAUnB,MAAOA,GACfpE,EAAAC,EAAAC,cAACsF,EAAD,OAEFnF,SAASoF,eAAe,SD2GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.61f45e08.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mylogo2.d916940f.png\";","const NEW_TODO_CHANGED = \"NEW_TODO_CHANGED\";\r\nconst ADD_TODO = \"ADD_TODO\";\r\nconst TOGGLE_TODO_DONE = \"TOGGLE_TODO_DONE\";\r\nconst REMOVE_TODO = \"REMOVE _TODO\";\r\nconst ALL_DONE = \"ALL_DONE\";\r\nconst STATUS_ALL_DONE = \"STATUS_ALL_DONE\";\r\nconst VIEW_STATUS = \"VIEW_STATUS\";\r\n\r\nconst initialState = {\r\n  activePage: \"Todo List\",\r\n  newTodo: \"\",\r\n  allDone: 0,\r\n  view: \"Show All\",\r\n  todos: [\r\n    { title: \"Learn React\", done: false },\r\n    { title: \"Learn React2\", done: false }\r\n  ]\r\n};\r\n\r\nexport const actions = {\r\n  newTodoChanged(newTodo) {\r\n    return {\r\n      type: NEW_TODO_CHANGED,\r\n      newTodo\r\n    };\r\n  },\r\n  addTodo(todo) {\r\n    return {\r\n      type: ADD_TODO,\r\n\r\n      todo\r\n    };\r\n  },\r\n  toggleTodoDone(toggle) {\r\n    return {\r\n      type: TOGGLE_TODO_DONE,\r\n      toggle\r\n    };\r\n  },\r\n  removeTodo(index) {\r\n    return {\r\n      type: REMOVE_TODO,\r\n      index\r\n    };\r\n  },\r\n  allDone() {\r\n    return {\r\n      type: ALL_DONE\r\n    };\r\n  },\r\n  statusAllDone() {\r\n    return {\r\n      type: STATUS_ALL_DONE\r\n    };\r\n  },\r\n  viewStatus(viewInput) {\r\n    return {\r\n      type: VIEW_STATUS,\r\n      viewInput\r\n    };\r\n  }\r\n};\r\n\r\nexport function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case NEW_TODO_CHANGED: {\r\n      return {\r\n        ...state,\r\n        newTodo: action.newTodo\r\n      };\r\n    }\r\n    case ADD_TODO: {\r\n      return {\r\n        ...state,\r\n        todos: [...state.todos, action.todo]\r\n      };\r\n    }\r\n    case TOGGLE_TODO_DONE: {\r\n      const todos = [...state.todos]; // Copy todos array value\r\n      // todos[index] = { ...todos[index] }; // Copy the specific object in the array\r\n      todos[action.toggle.index].done = action.toggle.checked; // update the 'done' property of the object\r\n      return {\r\n        ...state,\r\n        todos\r\n      };\r\n    }\r\n    case REMOVE_TODO: {\r\n      const todos = [...state.todos]; // Copy todos array value\r\n      todos.splice(action.index, 1); // remove from array\r\n      return {\r\n        ...state,\r\n        todos\r\n      };\r\n    }\r\n    case ALL_DONE: {\r\n      let status = true;\r\n      if (state.allDone) {\r\n        status = false;\r\n      }\r\n      const todos = state.todos.map(todo => {\r\n        return {\r\n          ...todo,\r\n          done: status\r\n        };\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        allDone: status,\r\n        todos\r\n      };\r\n    }\r\n    case STATUS_ALL_DONE: {\r\n      let count = 0;\r\n      state.todos.map(todo => {\r\n        if (todo.done) {\r\n          count++;\r\n        }\r\n        return count;\r\n      });\r\n      console.log(count);\r\n      return {\r\n        ...state,\r\n        allDone: count === state.todos.length ? true : false\r\n      };\r\n    }\r\n    case VIEW_STATUS: {\r\n      return {\r\n        ...state,\r\n        view: action.viewInput\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./CustomNav.scss\";\r\n\r\nfunction CustomNav(props) {\r\n  const showMobileNav = () => {\r\n    let toggle = document.querySelector(\"nav\").style.height;\r\n    console.log(toggle);\r\n    if (toggle === \"0px\" || toggle === \"\") {\r\n      document.querySelector(\"nav\").style.height = \"210px\";\r\n      document.querySelector(\".icon\").classList.add(\"show\");\r\n    } \r\n    else {\r\n      document.querySelector(\"nav\").style.height = \"0px\";\r\n      document.querySelector(\".icon\").classList.remove(\"show\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"custom-nav\">\r\n      <nav>\r\n        <div className=\"icon\" onClick={showMobileNav}>\r\n          <div className=\"hamburger\" />\r\n        </div>\r\n        <ul id=\"nav-body\">\r\n          <li className=\"active\">\r\n            <a href=\"#home\">Home</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#news\">News</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#contact\">Contact</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#about\">About</a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomNav;\r\n","import React from \"react\";\r\nimport \"./Logo.scss\";\r\nimport logo from \"../../../assets/mylogo2.png\";\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <div className=\"logo\">\r\n      <a href=\"#home\">\r\n        <img width=\"50px\" height=\"50px\" src={logo} alt=\"JM\" />\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport CustomNav from \"./CustomNav/CustomNav\";\r\nimport Logo from \"./Logo/Logo\";\r\nimport \"./CustomHeader.scss\";\r\n\r\nconst CustomHeader = () => {\r\n  return (\r\n    <div className=\"custom-header\">\r\n      <Logo />\r\n      <CustomNav />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomHeader;\r\n","import React from \"react\";\r\nimport \"./MainContent.css\";\r\n\r\nconst InputTextBox = props => {\r\n  return (\r\n    <div>\r\n      <form onSubmit={props.formSubmitted}>\r\n        <input type=\"checkbox\" id=\"toggle\" />\r\n        <label htmlFor=\"toggle\" className=\"btn\" />\r\n        <input\r\n          type=\"text\"\r\n          name=\"newTodo\"\r\n          onChange={event => props.newTodoChange(event.target.value)}\r\n          value={props.newTodo}\r\n          placeholder=\"Input task here...\"\r\n          className=\"textInput\"\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputTextBox;\r\n","import React from \"react\";\r\nimport \"./MainContent.css\";\r\n\r\nconst TaskItem = props => {\r\n  return (\r\n    <div\r\n      className={\r\n        props.view === \"Active\" && props.todo.done === false\r\n          ? \"task-card show\"\r\n          : props.view === \"Done\" && props.todo.done === true\r\n          ? \"task-card show\"\r\n          : props.view === \"Show All\"\r\n          ? \"task-card show\"\r\n          : \"task-card hide\"\r\n      }\r\n      key={props.index}\r\n    >\r\n      <label className=\"task\">\r\n        <input\r\n          type=\"checkbox\"\r\n          id=\"task-item\"\r\n          onChange={event => props.toggleTodoDone(event, props.index)}\r\n          checked={props.todo.done}\r\n        />\r\n        <span className={props.todo.done ? \"todo-done\" : \"\"}>\r\n          {props.todo.title}\r\n        </span>\r\n\r\n        <span className=\"checkmark\" />\r\n      </label>\r\n      <span\r\n        className=\"delete-task\"\r\n        title=\"Delete\"\r\n        onClick={() => props.removeTodo(props.index)}\r\n      >\r\n        &#10005;\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskItem;\r\n","import React from \"react\";\r\nimport TaskItem from \"./TaskItem\";\r\nimport \"./MainContent.css\";\r\n\r\nconst TaskList = props => {\r\n  return (\r\n    <div>\r\n      <div className=\"sub-menu\">\r\n        <ul>\r\n          <li>\r\n            <label className=\"task\">\r\n              <input\r\n                type=\"checkbox\"\r\n                id=\"task-item\"\r\n                // onChange={event => props.toggleTodoDone(event, props.index)}\r\n                onChange={() => props.checkAll()}\r\n                checked={props.allDone ? true : false}\r\n              />\r\n              <span className={props.allDone ? \"todo-done\" : \"\"}>\r\n                {props.allDone ? \"Uncheck All\" : \"All Done\"}\r\n              </span>\r\n\r\n              <span className=\"checkmark\" />\r\n            </label>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"task-container\">\r\n        {props.todos.map((todo, index) => {\r\n          return (\r\n            <TaskItem\r\n              view={props.view}\r\n              toggleTodoDone={props.toggleTodoDone}\r\n              removeTodo={props.removeTodo}\r\n              todo={todo}\r\n              index={index}\r\n              key={index}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"sub-menu\">\r\n        <ul>\r\n          <li\r\n            className={props.view === \"Show All\" ? \"active\" : \"\"}\r\n            onClick={() => props.viewStatus(\"Show All\")}\r\n          >\r\n            Show All\r\n          </li>\r\n          <li\r\n            className={props.view === \"Active\" ? \"active\" : \"\"}\r\n            onClick={() => props.viewStatus(\"Active\")}\r\n          >\r\n            Active\r\n          </li>\r\n          <li\r\n            className={props.view === \"Done\" ? \"active\" : \"\"}\r\n            onClick={() => props.viewStatus(\"Done\")}\r\n          >\r\n            Done\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","import React, { Component } from \"react\";\r\nimport InputTextBox from \"../../Components/TodoApp/InputTextBox\";\r\nimport TaskList from \"../../Components/TodoApp/TaskList\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../../Components/TodoApp/MainContent.css\";\r\nimport { actions } from \"../../store\";\r\n\r\nclass TodoApp extends Component {\r\n  //Add new TODO Task\r\n  formSubmitted(event) {\r\n    event.preventDefault();\r\n    this.props.onAddTodo({\r\n      title: this.props.newTodo,\r\n      done: false\r\n    });\r\n    this.props.onNewTodoChanged(\"\");\r\n    this.props.onStatusAllDone();\r\n  }\r\n\r\n  //CHECKED and UNCHECKED TASK\r\n  toggleTodoDone(event, index) {\r\n    this.props.onToggleTodoDone({\r\n      index,\r\n      checked: event.target.checked\r\n    });\r\n    this.props.onStatusAllDone();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main-content\">\r\n        <div>\r\n          <div className=\"title-input-bar\">\r\n            <span>{this.props.activePage}</span>\r\n\r\n            <InputTextBox\r\n              newTodo={this.props.newTodo}\r\n              formSubmitted={event => this.formSubmitted(event)} //Other way to bind\r\n              newTodoChange={this.props.onNewTodoChanged} //Other way to bind\r\n            />\r\n          </div>\r\n          <TaskList\r\n            view={this.props.view}\r\n            viewStatus={this.props.onViewStatus}\r\n            allDone={this.props.allDone}\r\n            toggleTodoDone={this.toggleTodoDone.bind(this)} //Simplest way to bind\r\n            removeTodo={this.props.onRemoveTodo} //Simplest way to bind\r\n            todos={this.props.todos}\r\n            checkAll={this.props.onAllDone}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    activePage: state.activePage,\r\n    newTodo: state.newTodo,\r\n    allDone: state.allDone,\r\n    todos: state.todos,\r\n    view: state.view\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    onNewTodoChanged(newTodo) {\r\n      dispatch(actions.newTodoChanged(newTodo));\r\n    },\r\n    onAddTodo(todo) {\r\n      dispatch(actions.addTodo(todo));\r\n    },\r\n    onToggleTodoDone(toggle) {\r\n      dispatch(actions.toggleTodoDone(toggle));\r\n    },\r\n    onRemoveTodo(index) {\r\n      dispatch(actions.removeTodo(index));\r\n    },\r\n    onAllDone() {\r\n      dispatch(actions.allDone());\r\n    },\r\n    onStatusAllDone() {\r\n      dispatch(actions.statusAllDone());\r\n    },\r\n    onViewStatus(viewInput) {\r\n      console.log(viewInput);\r\n      dispatch(actions.viewStatus(viewInput));\r\n    }\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TodoApp);\r\n","import React, { Component } from \"react\";\r\nimport CustomHeader from \"./Components/CustomHeader/CustomHeader\";\r\nimport TodoApp from \"./containers/TodoApp/TodoApp\";\r\n\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <CustomHeader />\r\n        <TodoApp />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { reducer } from \"./store\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { logger } from \"redux-logger\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  compose(\r\n    applyMiddleware(logger),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}