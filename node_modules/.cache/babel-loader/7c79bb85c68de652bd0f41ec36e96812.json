{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\cr57.jayson\\\\Desktop\\\\WEBMD\\\\Training\\\\mytask\\\\react\\\\react-app\\\\code-garden\\\\react-todo-redux\\\\src\\\\Components\\\\TodoApp\\\\TaskList.js\";\nimport React from \"react\";\nimport TaskItem from \"./TaskItem\";\nimport \"./MainContent.scss\";\n\nvar TaskList = function TaskList(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"sub-menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"checkall\",\n    onClick: function onClick() {\n      return props.checkAll();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, props.allDone ? \"Uncheck All\" : \"All Done\"), React.createElement(\"span\", {\n    className: \"dropdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"View\", React.createElement(\"div\", {\n    className: \"dropdown-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    onClick: function onClick() {\n      return props.viewStatus(\"Show All\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Show All\"), React.createElement(\"li\", {\n    onClick: function onClick() {\n      return props.viewStatus(\"Active\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Active\"), React.createElement(\"li\", {\n    onClick: function onClick() {\n      return props.viewStatus(\"Done\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Done\")))), React.createElement(\"div\", {\n    className: \"task-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, props.todos.map(function (todo, index) {\n    return React.createElement(TaskItem, {\n      className: props.view === \"Active\" && todo.done === false ? \"show\" : props.view === \"Done\" && todo.done === true ? \"show\" : props.view === \"Show All\" ? \"show\" : \"\",\n      toggleTodoDone: props.toggleTodoDone,\n      removeTodo: props.removeTodo,\n      todo: todo,\n      index: index,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    });\n  })));\n};\n\nexport default TaskList;","map":{"version":3,"sources":["c:\\Users\\cr57.jayson\\Desktop\\WEBMD\\Training\\mytask\\react\\react-app\\code-garden\\react-todo-redux\\src\\Components\\TodoApp\\TaskList.js"],"names":["React","TaskItem","TaskList","props","checkAll","allDone","viewStatus","todos","map","todo","index","view","done","toggleTodoDone","removeTodo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,oBAAP;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AACxB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,UAAhB;AAA2B,IAAA,OAAO,EAAE;AAAA,aAAMA,KAAK,CAACC,QAAN,EAAN;AAAA,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACE,OAAN,GAAgB,aAAhB,GAAgC,UADnC,CADF,EAIE;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAEE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,OAAO,EAAE;AAAA,aAAMF,KAAK,CAACG,UAAN,CAAiB,UAAjB,CAAN;AAAA,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAI,IAAA,OAAO,EAAE;AAAA,aAAMH,KAAK,CAACG,UAAN,CAAiB,QAAjB,CAAN;AAAA,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGE;AAAI,IAAA,OAAO,EAAE;AAAA,aAAMH,KAAK,CAACG,UAAN,CAAiB,MAAjB,CAAN;AAAA,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,CAFF,CAJF,CADF,EAcE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KAAK,CAACI,KAAN,CAAYC,GAAZ,CAAgB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAChC,WACE,oBAAC,QAAD;AACE,MAAA,SAAS,EACPP,KAAK,CAACQ,IAAN,KAAe,QAAf,IAA2BF,IAAI,CAACG,IAAL,KAAc,KAAzC,GACI,MADJ,GAEIT,KAAK,CAACQ,IAAN,KAAe,MAAf,IAAyBF,IAAI,CAACG,IAAL,KAAc,IAAvC,GACA,MADA,GAEAT,KAAK,CAACQ,IAAN,KAAe,UAAf,GACA,MADA,GAEA,EARR;AAUE,MAAA,cAAc,EAAER,KAAK,CAACU,cAVxB;AAWE,MAAA,UAAU,EAAEV,KAAK,CAACW,UAXpB;AAYE,MAAA,IAAI,EAAEL,IAZR;AAaE,MAAA,KAAK,EAAEC,KAbT;AAcE,MAAA,GAAG,EAAEA,KAdP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAkBD,GAnBA,CADH,CAdF,CADF;AAuCD,CAxCD;;AA0CA,eAAeR,QAAf","sourcesContent":["import React from \"react\";\r\nimport TaskItem from \"./TaskItem\";\r\nimport \"./MainContent.scss\";\r\n\r\nconst TaskList = props => {\r\n  return (\r\n    <div>\r\n      <div className=\"sub-menu\">\r\n        <span className=\"checkall\" onClick={() => props.checkAll()}>\r\n          {props.allDone ? \"Uncheck All\" : \"All Done\"}\r\n        </span>\r\n        <span className=\"dropdown\">\r\n          View\r\n          <div className=\"dropdown-content\">\r\n            <li onClick={() => props.viewStatus(\"Show All\")}>Show All</li>\r\n            <li onClick={() => props.viewStatus(\"Active\")}>Active</li>\r\n            <li onClick={() => props.viewStatus(\"Done\")}>Done</li>\r\n          </div>\r\n        </span>\r\n      </div>\r\n      <div className=\"task-container\">\r\n        {props.todos.map((todo, index) => {\r\n          return (\r\n            <TaskItem\r\n              className={\r\n                props.view === \"Active\" && todo.done === false\r\n                  ? \"show\"\r\n                  : props.view === \"Done\" && todo.done === true\r\n                  ? \"show\"\r\n                  : props.view === \"Show All\"\r\n                  ? \"show\"\r\n                  : \"\"\r\n              }\r\n              toggleTodoDone={props.toggleTodoDone}\r\n              removeTodo={props.removeTodo}\r\n              todo={todo}\r\n              index={index}\r\n              key={index}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"]},"metadata":{},"sourceType":"module"}