{"ast":null,"code":"import _toConsumableArray from \"c:\\\\Users\\\\cr57.jayson\\\\Desktop\\\\WEBMD\\\\Training\\\\mytask\\\\react\\\\react-app\\\\code-garden\\\\react-todo-redux\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"c:\\\\Users\\\\cr57.jayson\\\\Desktop\\\\WEBMD\\\\Training\\\\mytask\\\\react\\\\react-app\\\\code-garden\\\\react-todo-redux\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar NEW_TODO_CHANGED = \"NEW_TODO_CHANGED\";\nvar ADD_TODO = \"ADD_TODO\";\nvar TOGGLE_TODO_DONE = \"TOGGLE_TODO_DONE\";\nvar REMOVE_TODO = \"REMOVE _TODO\";\nvar ALL_DONE = \"ALL_DONE\";\nvar CHANGE_ALL_DONE = \"CHANGE_ALL_DONE\";\nvar initialState = {\n  activePage: \"Todo List\",\n  newTodo: \"\",\n  allDone: 0,\n  todos: [{\n    title: \"Learn React\",\n    done: false\n  }, {\n    title: \"Learn React2\",\n    done: false\n  }]\n};\nexport var actions = {\n  newTodoChanged: function newTodoChanged(newTodo) {\n    return {\n      type: NEW_TODO_CHANGED,\n      newTodo: newTodo\n    };\n  },\n  addTodo: function addTodo(todo) {\n    return {\n      type: ADD_TODO,\n      todo: todo\n    };\n  },\n  toggleTodoDone: function toggleTodoDone(toggle) {\n    return {\n      type: TOGGLE_TODO_DONE,\n      toggle: toggle\n    };\n  },\n  removeTodo: function removeTodo(index) {\n    return {\n      type: REMOVE_TODO,\n      index: index\n    };\n  },\n  allDone: function allDone() {\n    return {\n      type: ALL_DONE\n    };\n  },\n  changeAllDone: function changeAllDone() {\n    return {\n      type: CHANGE_ALL_DONE\n    };\n  }\n};\nexport function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case NEW_TODO_CHANGED:\n      {\n        return _objectSpread({}, state, {\n          newTodo: action.newTodo\n        });\n      }\n\n    case ADD_TODO:\n      {\n        return _objectSpread({}, state, {\n          todos: [].concat(_toConsumableArray(state.todos), [action.todo])\n        });\n      }\n\n    case TOGGLE_TODO_DONE:\n      {\n        var todos = _toConsumableArray(state.todos); // Copy todos array value\n        // todos[index] = { ...todos[index] }; // Copy the specific object in the array\n\n\n        todos[action.toggle.index].done = action.toggle.checked; // update the 'done' property of the object\n\n        return _objectSpread({}, state, {\n          allDone: state.allDone + 1,\n          todos: todos\n        });\n      }\n\n    case REMOVE_TODO:\n      {\n        var _todos = _toConsumableArray(state.todos); // Copy todos array value\n\n\n        _todos.splice(action.index, 1); // remove from array\n\n\n        return _objectSpread({}, state, {\n          todos: _todos\n        });\n      }\n\n    case ALL_DONE:\n      {\n        var doneStatus = false;\n\n        if (allDone < 0) {\n          doneStatus = true;\n        }\n\n        var _todos2 = state.todos.map(function (todo) {\n          return _objectSpread({}, todo, {\n            done: doneStatus\n          });\n        });\n\n        return _objectSpread({}, state, {\n          allDone: state.todos.length,\n          todos: _todos2\n        });\n      }\n\n    case CHANGE_ALL_DONE:\n      {\n        return _objectSpread({}, state, {\n          allDone: 0\n        });\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["c:\\Users\\cr57.jayson\\Desktop\\WEBMD\\Training\\mytask\\react\\react-app\\code-garden\\react-todo-redux\\src\\store.js"],"names":["NEW_TODO_CHANGED","ADD_TODO","TOGGLE_TODO_DONE","REMOVE_TODO","ALL_DONE","CHANGE_ALL_DONE","initialState","activePage","newTodo","allDone","todos","title","done","actions","newTodoChanged","type","addTodo","todo","toggleTodoDone","toggle","removeTodo","index","changeAllDone","reducer","state","action","checked","splice","doneStatus","map","length"],"mappings":"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","sourcesContent":["const NEW_TODO_CHANGED = \"NEW_TODO_CHANGED\";\r\nconst ADD_TODO = \"ADD_TODO\";\r\nconst TOGGLE_TODO_DONE = \"TOGGLE_TODO_DONE\";\r\nconst REMOVE_TODO = \"REMOVE _TODO\";\r\nconst ALL_DONE = \"ALL_DONE\";\r\nconst CHANGE_ALL_DONE = \"CHANGE_ALL_DONE\";\r\n\r\nconst initialState = {\r\n  activePage: \"Todo List\",\r\n  newTodo: \"\",\r\n  allDone: 0,\r\n  todos: [\r\n    { title: \"Learn React\", done: false },\r\n    { title: \"Learn React2\", done: false }\r\n  ]\r\n};\r\n\r\nexport const actions = {\r\n  newTodoChanged(newTodo) {\r\n    return {\r\n      type: NEW_TODO_CHANGED,\r\n      newTodo\r\n    };\r\n  },\r\n  addTodo(todo) {\r\n    return {\r\n      type: ADD_TODO,\r\n\r\n      todo\r\n    };\r\n  },\r\n  toggleTodoDone(toggle) {\r\n    return {\r\n      type: TOGGLE_TODO_DONE,\r\n      toggle\r\n    };\r\n  },\r\n  removeTodo(index) {\r\n    return {\r\n      type: REMOVE_TODO,\r\n      index\r\n    };\r\n  },\r\n  allDone() {\r\n    return {\r\n      type: ALL_DONE\r\n    };\r\n  },\r\n  changeAllDone() {\r\n    return {\r\n      type: CHANGE_ALL_DONE\r\n    };\r\n  }\r\n};\r\n\r\nexport function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case NEW_TODO_CHANGED: {\r\n      return {\r\n        ...state,\r\n        newTodo: action.newTodo\r\n      };\r\n    }\r\n    case ADD_TODO: {\r\n      return {\r\n        ...state,\r\n        todos: [...state.todos, action.todo]\r\n      };\r\n    }\r\n    case TOGGLE_TODO_DONE: {\r\n      const todos = [...state.todos]; // Copy todos array value\r\n      // todos[index] = { ...todos[index] }; // Copy the specific object in the array\r\n      todos[action.toggle.index].done = action.toggle.checked; // update the 'done' property of the object\r\n      return {\r\n        ...state,\r\n        allDone: state.allDone + 1,\r\n        todos\r\n      };\r\n    }\r\n    case REMOVE_TODO: {\r\n      const todos = [...state.todos]; // Copy todos array value\r\n      todos.splice(action.index, 1); // remove from array\r\n      return {\r\n        ...state,\r\n        todos\r\n      };\r\n    }\r\n    case ALL_DONE: {\r\n      let doneStatus = false;\r\n      if (allDone < 0) {\r\n        doneStatus = true;\r\n      }\r\n\r\n      const todos = state.todos.map(todo => {\r\n        return {\r\n          ...todo,\r\n          done: doneStatus\r\n        };\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        allDone: state.todos.length,\r\n        todos\r\n      };\r\n    }\r\n    case CHANGE_ALL_DONE: {\r\n      return {\r\n        ...state,\r\n        allDone: 0\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}