{"ast":null,"code":"import _toConsumableArray from \"c:\\\\Users\\\\cr57.jayson\\\\Desktop\\\\WEBMD\\\\Training\\\\mytask\\\\react\\\\react-app\\\\code-garden\\\\react-todo-redux\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"c:\\\\Users\\\\cr57.jayson\\\\Desktop\\\\WEBMD\\\\Training\\\\mytask\\\\react\\\\react-app\\\\code-garden\\\\react-todo-redux\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar NEW_TODO_CHANGED = \"NEW_TODO_CHANGED\";\nvar ADD_TODO = \"ADD_TODO\";\nvar TOGGLE_TODO_DONE = \"TOGGLE_TODO_DONE\";\nvar REMOVE_TODO = \"REMOVE _TODO\";\nvar ALL_DONE = \"ALL_DONE\";\nvar STATUS_ALL_DONE = \"STATUS_ALL_DONE\";\nvar VIEW_STATUS = \"VIEW_STATUS\";\nvar initialState = {\n  activePage: \"Todo List\",\n  newTodo: \"\",\n  allDone: 0,\n  view: \"Show All\",\n  todos: [{\n    title: \"Learn React\",\n    done: false\n  }, {\n    title: \"Learn React2\",\n    done: false\n  }]\n};\nexport var actions = {\n  newTodoChanged: function newTodoChanged(newTodo) {\n    return {\n      type: NEW_TODO_CHANGED,\n      newTodo: newTodo\n    };\n  },\n  addTodo: function addTodo(todo) {\n    return {\n      type: ADD_TODO,\n      todo: todo\n    };\n  },\n  toggleTodoDone: function toggleTodoDone(toggle) {\n    return {\n      type: TOGGLE_TODO_DONE,\n      toggle: toggle\n    };\n  },\n  removeTodo: function removeTodo(index) {\n    return {\n      type: REMOVE_TODO,\n      index: index\n    };\n  },\n  allDone: function allDone() {\n    return {\n      type: ALL_DONE\n    };\n  },\n  statusAllDone: function statusAllDone() {\n    return {\n      type: STATUS_ALL_DONE\n    };\n  },\n  viewStatus: function viewStatus() {\n    return {\n      type: VIEW_STATUS\n    };\n  }\n};\nexport function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case NEW_TODO_CHANGED:\n      {\n        return _objectSpread({}, state, {\n          newTodo: action.newTodo\n        });\n      }\n\n    case ADD_TODO:\n      {\n        return _objectSpread({}, state, {\n          todos: [].concat(_toConsumableArray(state.todos), [action.todo])\n        });\n      }\n\n    case TOGGLE_TODO_DONE:\n      {\n        var todos = _toConsumableArray(state.todos); // Copy todos array value\n        // todos[index] = { ...todos[index] }; // Copy the specific object in the array\n\n\n        todos[action.toggle.index].done = action.toggle.checked; // update the 'done' property of the object\n\n        return _objectSpread({}, state, {\n          todos: todos\n        });\n      }\n\n    case REMOVE_TODO:\n      {\n        var _todos = _toConsumableArray(state.todos); // Copy todos array value\n\n\n        _todos.splice(action.index, 1); // remove from array\n\n\n        return _objectSpread({}, state, {\n          todos: _todos\n        });\n      }\n\n    case ALL_DONE:\n      {\n        var status = true;\n\n        if (state.allDone) {\n          status = false;\n        }\n\n        var _todos2 = state.todos.map(function (todo) {\n          return _objectSpread({}, todo, {\n            done: status\n          });\n        });\n\n        return _objectSpread({}, state, {\n          allDone: status,\n          todos: _todos2\n        });\n      }\n\n    case STATUS_ALL_DONE:\n      {\n        var count = 0;\n        state.todos.map(function (todo) {\n          if (todo.done) {\n            count++;\n          }\n\n          return count;\n        });\n        console.log(count);\n        return _objectSpread({}, state, {\n          allDone: count === state.todos.length ? true : false\n        });\n      }\n\n    case VIEW_STATUS:\n      {\n        return _objectSpread({}, state, {\n          view: view\n        });\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["c:\\Users\\cr57.jayson\\Desktop\\WEBMD\\Training\\mytask\\react\\react-app\\code-garden\\react-todo-redux\\src\\store.js"],"names":["NEW_TODO_CHANGED","ADD_TODO","TOGGLE_TODO_DONE","REMOVE_TODO","ALL_DONE","STATUS_ALL_DONE","VIEW_STATUS","initialState","activePage","newTodo","allDone","view","todos","title","done","actions","newTodoChanged","type","addTodo","todo","toggleTodoDone","toggle","removeTodo","index","statusAllDone","viewStatus","reducer","state","action","checked","splice","status","map","count","console","log","length"],"mappings":"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","sourcesContent":["const NEW_TODO_CHANGED = \"NEW_TODO_CHANGED\";\r\nconst ADD_TODO = \"ADD_TODO\";\r\nconst TOGGLE_TODO_DONE = \"TOGGLE_TODO_DONE\";\r\nconst REMOVE_TODO = \"REMOVE _TODO\";\r\nconst ALL_DONE = \"ALL_DONE\";\r\nconst STATUS_ALL_DONE = \"STATUS_ALL_DONE\";\r\nconst VIEW_STATUS = \"VIEW_STATUS\";\r\n\r\nconst initialState = {\r\n  activePage: \"Todo List\",\r\n  newTodo: \"\",\r\n  allDone: 0,\r\n  view: \"Show All\",\r\n  todos: [\r\n    { title: \"Learn React\", done: false },\r\n    { title: \"Learn React2\", done: false }\r\n  ]\r\n};\r\n\r\nexport const actions = {\r\n  newTodoChanged(newTodo) {\r\n    return {\r\n      type: NEW_TODO_CHANGED,\r\n      newTodo\r\n    };\r\n  },\r\n  addTodo(todo) {\r\n    return {\r\n      type: ADD_TODO,\r\n\r\n      todo\r\n    };\r\n  },\r\n  toggleTodoDone(toggle) {\r\n    return {\r\n      type: TOGGLE_TODO_DONE,\r\n      toggle\r\n    };\r\n  },\r\n  removeTodo(index) {\r\n    return {\r\n      type: REMOVE_TODO,\r\n      index\r\n    };\r\n  },\r\n  allDone() {\r\n    return {\r\n      type: ALL_DONE\r\n    };\r\n  },\r\n  statusAllDone() {\r\n    return {\r\n      type: STATUS_ALL_DONE\r\n    };\r\n  },\r\n  viewStatus() {\r\n    return {\r\n      type: VIEW_STATUS\r\n    };\r\n  }\r\n};\r\n\r\nexport function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case NEW_TODO_CHANGED: {\r\n      return {\r\n        ...state,\r\n        newTodo: action.newTodo\r\n      };\r\n    }\r\n    case ADD_TODO: {\r\n      return {\r\n        ...state,\r\n        todos: [...state.todos, action.todo]\r\n      };\r\n    }\r\n    case TOGGLE_TODO_DONE: {\r\n      const todos = [...state.todos]; // Copy todos array value\r\n      // todos[index] = { ...todos[index] }; // Copy the specific object in the array\r\n      todos[action.toggle.index].done = action.toggle.checked; // update the 'done' property of the object\r\n      return {\r\n        ...state,\r\n        todos\r\n      };\r\n    }\r\n    case REMOVE_TODO: {\r\n      const todos = [...state.todos]; // Copy todos array value\r\n      todos.splice(action.index, 1); // remove from array\r\n      return {\r\n        ...state,\r\n        todos\r\n      };\r\n    }\r\n    case ALL_DONE: {\r\n      let status = true;\r\n      if (state.allDone) {\r\n        status = false;\r\n      }\r\n      const todos = state.todos.map(todo => {\r\n        return {\r\n          ...todo,\r\n          done: status\r\n        };\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        allDone: status,\r\n        todos\r\n      };\r\n    }\r\n    case STATUS_ALL_DONE: {\r\n      let count = 0;\r\n      state.todos.map(todo => {\r\n        if (todo.done) {\r\n          count++;\r\n        }\r\n        return count;\r\n      });\r\n      console.log(count);\r\n      return {\r\n        ...state,\r\n        allDone: count === state.todos.length ? true : false\r\n      };\r\n    }\r\n    case VIEW_STATUS: {\r\n      return {\r\n        ...state,\r\n        view: view\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}