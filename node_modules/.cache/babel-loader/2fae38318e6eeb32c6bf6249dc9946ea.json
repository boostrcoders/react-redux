{"ast":null,"code":"import _classCallCheck from \"c:\\\\Users\\\\cr57.jayson\\\\Desktop\\\\WEBMD\\\\Training\\\\mytask\\\\react\\\\react-app\\\\code-garden\\\\react-todo-redux\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"c:\\\\Users\\\\cr57.jayson\\\\Desktop\\\\WEBMD\\\\Training\\\\mytask\\\\react\\\\react-app\\\\code-garden\\\\react-todo-redux\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"c:\\\\Users\\\\cr57.jayson\\\\Desktop\\\\WEBMD\\\\Training\\\\mytask\\\\react\\\\react-app\\\\code-garden\\\\react-todo-redux\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"c:\\\\Users\\\\cr57.jayson\\\\Desktop\\\\WEBMD\\\\Training\\\\mytask\\\\react\\\\react-app\\\\code-garden\\\\react-todo-redux\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"c:\\\\Users\\\\cr57.jayson\\\\Desktop\\\\WEBMD\\\\Training\\\\mytask\\\\react\\\\react-app\\\\code-garden\\\\react-todo-redux\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"c:\\\\Users\\\\cr57.jayson\\\\Desktop\\\\WEBMD\\\\Training\\\\mytask\\\\react\\\\react-app\\\\code-garden\\\\react-todo-redux\\\\src\\\\containers\\\\TodoApp\\\\TodoApp.js\";\nimport React, { Component } from \"react\";\nimport InputTextBox from \"../../Components/TodoApp/InputTextBox\";\nimport TaskList from \"../../Components/TodoApp/TaskList\";\nimport { connect } from \"react-redux\";\nimport \"../../Components/TodoApp/MainContent.css\";\nimport { actions } from \"../../store\";\n\nvar TodoApp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TodoApp, _Component);\n\n  function TodoApp() {\n    _classCallCheck(this, TodoApp);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TodoApp).apply(this, arguments));\n  }\n\n  _createClass(TodoApp, [{\n    key: \"formSubmitted\",\n    //Add new TODO Task\n    value: function formSubmitted(event) {\n      event.preventDefault();\n      this.props.onAddTodo({\n        title: this.props.newTodo,\n        done: false\n      });\n      this.props.onNewTodoChanged(\"\");\n      this.props.onStatusAllDone();\n    } //CHECKED and UNCHECKED TASK\n\n  }, {\n    key: \"toggleTodoDone\",\n    value: function toggleTodoDone(event, index) {\n      this.props.onToggleTodoDone({\n        index: index,\n        checked: event.target.checked\n      });\n      this.props.onStatusAllDone();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(\"div\", {\n        className: \"main-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"title-input-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, this.props.activePage), React.createElement(InputTextBox, {\n        newTodo: this.props.newTodo,\n        formSubmitted: function formSubmitted(event) {\n          return _this.formSubmitted(event);\n        } //Other way to bind\n        ,\n        newTodoChange: this.props.onNewTodoChanged //Other way to bind\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      })), React.createElement(TaskList, {\n        view: this.props.view,\n        viewStatus: this.props.onViewStatus,\n        allDone: this.props.allDone,\n        toggleTodoDone: this.toggleTodoDone.bind(this) //Simplest way to bind\n        ,\n        removeTodo: this.props.onRemoveTodo //Simplest way to bind\n        ,\n        todos: this.props.todos,\n        checkAll: this.props.onAllDone,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return TodoApp;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    activePage: state.activePage,\n    newTodo: state.newTodo,\n    allDone: state.allDone,\n    todos: state.todos,\n    view: state.view\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onNewTodoChanged: function onNewTodoChanged(newTodo) {\n      dispatch(actions.newTodoChanged(newTodo));\n    },\n    onAddTodo: function onAddTodo(todo) {\n      dispatch(actions.addTodo(todo));\n    },\n    onToggleTodoDone: function onToggleTodoDone(toggle) {\n      dispatch(actions.toggleTodoDone(toggle));\n    },\n    onRemoveTodo: function onRemoveTodo(index) {\n      dispatch(actions.removeTodo(index));\n    },\n    onAllDone: function onAllDone() {\n      dispatch(actions.allDone());\n    },\n    onStatusAllDone: function onStatusAllDone() {\n      dispatch(actions.statusAllDone());\n    },\n    onViewStatus: function onViewStatus(viewInput) {\n      console.log(viewInput);\n      dispatch(actions.viewStatus(viewInput));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoApp);","map":{"version":3,"sources":["c:\\Users\\cr57.jayson\\Desktop\\WEBMD\\Training\\mytask\\react\\react-app\\code-garden\\react-todo-redux\\src\\containers\\TodoApp\\TodoApp.js"],"names":["React","Component","InputTextBox","TaskList","connect","actions","TodoApp","event","preventDefault","props","onAddTodo","title","newTodo","done","onNewTodoChanged","onStatusAllDone","index","onToggleTodoDone","checked","target","activePage","formSubmitted","view","onViewStatus","allDone","toggleTodoDone","bind","onRemoveTodo","todos","onAllDone","mapStateToProps","state","mapDispatchToProps","dispatch","newTodoChanged","todo","addTodo","toggle","removeTodo","statusAllDone","viewInput","console","log","viewStatus"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport InputTextBox from \"../../Components/TodoApp/InputTextBox\";\r\nimport TaskList from \"../../Components/TodoApp/TaskList\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../../Components/TodoApp/MainContent.css\";\r\nimport { actions } from \"../../store\";\r\n\r\nclass TodoApp extends Component {\r\n  //Add new TODO Task\r\n  formSubmitted(event) {\r\n    event.preventDefault();\r\n    this.props.onAddTodo({\r\n      title: this.props.newTodo,\r\n      done: false\r\n    });\r\n    this.props.onNewTodoChanged(\"\");\r\n    this.props.onStatusAllDone();\r\n  }\r\n\r\n  //CHECKED and UNCHECKED TASK\r\n  toggleTodoDone(event, index) {\r\n    this.props.onToggleTodoDone({\r\n      index,\r\n      checked: event.target.checked\r\n    });\r\n    this.props.onStatusAllDone();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main-content\">\r\n        <div>\r\n          <div className=\"title-input-bar\">\r\n            <span>{this.props.activePage}</span>\r\n\r\n            <InputTextBox\r\n              newTodo={this.props.newTodo}\r\n              formSubmitted={event => this.formSubmitted(event)} //Other way to bind\r\n              newTodoChange={this.props.onNewTodoChanged} //Other way to bind\r\n            />\r\n          </div>\r\n          <TaskList\r\n            view={this.props.view}\r\n            viewStatus={this.props.onViewStatus}\r\n            allDone={this.props.allDone}\r\n            toggleTodoDone={this.toggleTodoDone.bind(this)} //Simplest way to bind\r\n            removeTodo={this.props.onRemoveTodo} //Simplest way to bind\r\n            todos={this.props.todos}\r\n            checkAll={this.props.onAllDone}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    activePage: state.activePage,\r\n    newTodo: state.newTodo,\r\n    allDone: state.allDone,\r\n    todos: state.todos,\r\n    view: state.view\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    onNewTodoChanged(newTodo) {\r\n      dispatch(actions.newTodoChanged(newTodo));\r\n    },\r\n    onAddTodo(todo) {\r\n      dispatch(actions.addTodo(todo));\r\n    },\r\n    onToggleTodoDone(toggle) {\r\n      dispatch(actions.toggleTodoDone(toggle));\r\n    },\r\n    onRemoveTodo(index) {\r\n      dispatch(actions.removeTodo(index));\r\n    },\r\n    onAllDone() {\r\n      dispatch(actions.allDone());\r\n    },\r\n    onStatusAllDone() {\r\n      dispatch(actions.statusAllDone());\r\n    },\r\n    onViewStatus(viewInput) {\r\n      console.log(viewInput);\r\n      dispatch(actions.viewStatus(viewInput));\r\n    }\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TodoApp);\r\n"]},"metadata":{},"sourceType":"module"}