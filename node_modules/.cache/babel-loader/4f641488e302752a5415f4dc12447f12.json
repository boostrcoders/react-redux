{"ast":null,"code":"import _objectSpread from \"c:\\\\Users\\\\cr57.jayson\\\\Desktop\\\\WEBMD\\\\Training\\\\mytask\\\\react\\\\react-app\\\\code-garden\\\\react-todo-redux\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"c:\\\\Users\\\\cr57.jayson\\\\Desktop\\\\WEBMD\\\\Training\\\\mytask\\\\react\\\\react-app\\\\code-garden\\\\react-todo-redux\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"c:\\\\Users\\\\cr57.jayson\\\\Desktop\\\\WEBMD\\\\Training\\\\mytask\\\\react\\\\react-app\\\\code-garden\\\\react-todo-redux\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"c:\\\\Users\\\\cr57.jayson\\\\Desktop\\\\WEBMD\\\\Training\\\\mytask\\\\react\\\\react-app\\\\code-garden\\\\react-todo-redux\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"c:\\\\Users\\\\cr57.jayson\\\\Desktop\\\\WEBMD\\\\Training\\\\mytask\\\\react\\\\react-app\\\\code-garden\\\\react-todo-redux\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"c:\\\\Users\\\\cr57.jayson\\\\Desktop\\\\WEBMD\\\\Training\\\\mytask\\\\react\\\\react-app\\\\code-garden\\\\react-todo-redux\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"c:\\\\Users\\\\cr57.jayson\\\\Desktop\\\\WEBMD\\\\Training\\\\mytask\\\\react\\\\react-app\\\\code-garden\\\\react-todo-redux\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"c:\\\\Users\\\\cr57.jayson\\\\Desktop\\\\WEBMD\\\\Training\\\\mytask\\\\react\\\\react-app\\\\code-garden\\\\react-todo-redux\\\\src\\\\containers\\\\TodoApp\\\\MainContent.js\";\nimport React, { Component } from \"react\";\nimport InputTextBox from \"../../Components/TodoApp/InputTextBox\";\nimport TaskList from \"../../Components/TodoApp/TaskList\";\nimport { connect } from \"react-redux\";\nimport \"../../Components/TodoApp/MainContent.scss\";\nimport { actions } from \"./store\";\n\nvar MainContent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MainContent, _Component);\n\n  function MainContent() {\n    _classCallCheck(this, MainContent);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MainContent).apply(this, arguments));\n  }\n\n  _createClass(MainContent, [{\n    key: \"newTodoChange\",\n    value: function newTodoChange(event) {\n      this.setState({\n        newTodo: event.target.value\n      });\n    } //Add new TODO Task\n\n  }, {\n    key: \"formSubmitted\",\n    value: function formSubmitted(event) {\n      event.preventDefault();\n      this.setState({\n        newTodo: \"\",\n        todos: [].concat(_toConsumableArray(this.state.todos), [{\n          title: this.state.newTodo,\n          done: false\n        }])\n      }); // let todosArr = this.state.todos;\n      // let newTodo = this.state.newTodo;\n      // todosArr.push({ title: newTodo, done: false });\n      // this.setState({ todos: todosArr });\n    }\n  }, {\n    key: \"toggleTodoDone\",\n    value: function toggleTodoDone(event, index) {\n      var todos = _toConsumableArray(this.state.todos); // Copy todos array value\n      // todos[index] = { ...todos[index] }; // Copy the specific object in the array\n\n\n      todos[index].done = event.target.checked; // update the 'done' property of the object\n\n      this.setState({\n        todos: todos\n      });\n    }\n  }, {\n    key: \"removeTodo\",\n    value: function removeTodo(index) {\n      var todos = _toConsumableArray(this.state.todos); // Copy todos array value\n\n\n      todos.splice(index, 1); // remove from array\n\n      this.setState({\n        todos: todos\n      });\n      console.log(todos);\n    }\n  }, {\n    key: \"allDone\",\n    value: function allDone() {\n      var todos = this.state.todos.map(function (todo) {\n        return _objectSpread({}, todo, {\n          done: true\n        });\n      });\n      this.setState({\n        todos: todos\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(\"div\", {\n        className: \"main-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, this.props.activePage, React.createElement(InputTextBox // newTodo={props.newTodo}\n      // formSubmitted={props.formSubmitted}\n      // newTodoChange={props.newTodoChange}\n      // activePage={props.activePage}\n      , {\n        newTodo: this.props.newTodo,\n        formSubmitted: function formSubmitted(event) {\n          return _this.formSubmitted(event);\n        } //Other way to bind\n        ,\n        newTodoChange: function newTodoChange(event) {\n          return _this.newTodoChange(event);\n        } //Other way to bind\n        ,\n        activePage: this.props.activePage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })), React.createElement(TaskList // checkAll={props.checkAll}\n      // toggleTodoDone={props.toggleTodoDone}\n      // removeTodo={props.removeTodo}\n      // todos={props.todos}\n      , {\n        toggleTodoDone: this.toggleTodoDone.bind(this) //Simplest way to bind\n        ,\n        removeTodo: this.removeTodo.bind(this) //Simplest way to bind\n        ,\n        todos: this.props.todos,\n        checkAll: function checkAll() {\n          return _this.allDone();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return MainContent;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    activePage: state.activePage,\n    newTodo: state.newTodo,\n    todos: state.todos\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onNewTodoChanged: function onNewTodoChanged(newTodo) {\n      dispatch(actions.newTodoChanged(newTodo));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainContent);","map":{"version":3,"sources":["c:\\Users\\cr57.jayson\\Desktop\\WEBMD\\Training\\mytask\\react\\react-app\\code-garden\\react-todo-redux\\src\\containers\\TodoApp\\MainContent.js"],"names":["React","Component","InputTextBox","TaskList","connect","actions","MainContent","event","setState","newTodo","target","value","preventDefault","todos","state","title","done","index","checked","splice","console","log","map","todo","props","activePage","formSubmitted","newTodoChange","toggleTodoDone","bind","removeTodo","allDone","mapStateToProps","mapDispatchToProps","dispatch","onNewTodoChanged","newTodoChanged"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport InputTextBox from \"../../Components/TodoApp/InputTextBox\";\r\nimport TaskList from \"../../Components/TodoApp/TaskList\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../../Components/TodoApp/MainContent.scss\";\r\nimport { actions } from \"./store\";\r\n\r\nclass MainContent extends Component {\r\n  newTodoChange(event) {\r\n    this.setState({\r\n      newTodo: event.target.value\r\n    });\r\n  }\r\n\r\n  //Add new TODO Task\r\n  formSubmitted(event) {\r\n    event.preventDefault();\r\n\r\n    this.setState({\r\n      newTodo: \"\",\r\n      todos: [\r\n        ...this.state.todos,\r\n        {\r\n          title: this.state.newTodo,\r\n          done: false\r\n        }\r\n      ]\r\n    });\r\n    // let todosArr = this.state.todos;\r\n    // let newTodo = this.state.newTodo;\r\n    // todosArr.push({ title: newTodo, done: false });\r\n    // this.setState({ todos: todosArr });\r\n  }\r\n\r\n  toggleTodoDone(event, index) {\r\n    const todos = [...this.state.todos]; // Copy todos array value\r\n    // todos[index] = { ...todos[index] }; // Copy the specific object in the array\r\n    todos[index].done = event.target.checked; // update the 'done' property of the object\r\n    this.setState({\r\n      todos\r\n    });\r\n  }\r\n\r\n  removeTodo(index) {\r\n    const todos = [...this.state.todos]; // Copy todos array value\r\n    todos.splice(index, 1); // remove from array\r\n    this.setState({\r\n      todos\r\n    });\r\n    console.log(todos);\r\n  }\r\n\r\n  allDone() {\r\n    const todos = this.state.todos.map(todo => {\r\n      return {\r\n        ...todo,\r\n        done: true\r\n      };\r\n    });\r\n\r\n    this.setState({\r\n      todos\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"main-content\">\r\n        <div>\r\n          <h2>\r\n            {this.props.activePage}\r\n            <InputTextBox\r\n              // newTodo={props.newTodo}\r\n              // formSubmitted={props.formSubmitted}\r\n              // newTodoChange={props.newTodoChange}\r\n              // activePage={props.activePage}\r\n              newTodo={this.props.newTodo}\r\n              formSubmitted={event => this.formSubmitted(event)} //Other way to bind\r\n              newTodoChange={event => this.newTodoChange(event)} //Other way to bind\r\n              activePage={this.props.activePage}\r\n            />\r\n          </h2>\r\n          <TaskList\r\n            // checkAll={props.checkAll}\r\n            // toggleTodoDone={props.toggleTodoDone}\r\n            // removeTodo={props.removeTodo}\r\n            // todos={props.todos}\r\n            toggleTodoDone={this.toggleTodoDone.bind(this)} //Simplest way to bind\r\n            removeTodo={this.removeTodo.bind(this)} //Simplest way to bind\r\n            todos={this.props.todos}\r\n            checkAll={() => this.allDone()}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    activePage: state.activePage,\r\n    newTodo: state.newTodo,\r\n    todos: state.todos\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    onNewTodoChanged(newTodo) {\r\n      dispatch(actions.newTodoChanged(newTodo));\r\n    }\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MainContent);\r\n"]},"metadata":{},"sourceType":"module"}